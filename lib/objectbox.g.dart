// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/app_settings_model.dart';
import 'models/checked_emails_model.dart';
import 'models/components_cache_model.dart';
import 'models/oauth_model.dart';
import 'models/playstore_rating_model.dart';
import 'models/skipped_emails_history_model.dart';
import 'models/tiles_data_model.dart';
import 'models/unsubscribed_email_hisotry_model.dart';
import 'models/user_credential_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 4196086750508449998),
      name: 'AppSettingsModel',
      lastPropertyId: const obx_int.IdUid(6, 2282986283777076600),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 649903174364071469),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4040399526797555984),
            name: 'permanentDelete',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6273098008685474502),
            name: 'blockTheSender',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8561817685764304947),
            name: 'deleteAllMailsFromTheSender',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1324125716062841072),
            name: 'showSkippedEmails',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 2282986283777076600),
            name: 'showOnlyUnsubscribableEmails',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 5342550586011561445),
      name: 'CheckedEmailsModel',
      lastPropertyId: const obx_int.IdUid(2, 8987738871733025593),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 550603377574813022),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8987738871733025593),
            name: 'emailIds',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 7045546834580607743),
      name: 'ComponentsCacheModel',
      lastPropertyId: const obx_int.IdUid(2, 203990219501638436),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8146307843437977511),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 203990219501638436),
            name: 'introductionScreen',
            type: 1,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 7363249235741924784),
      name: 'PlaystoreRatingModel',
      lastPropertyId: const obx_int.IdUid(4, 4220179426138171180),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7136742973964701525),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9012818761205153017),
            name: 'neverShowAgain',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9103360876149170491),
            name: 'showAtCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4220179426138171180),
            name: 'dateIfNot',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 1715259541815572101),
      name: 'SkippedEmailsHistoryModel',
      lastPropertyId: const obx_int.IdUid(2, 259780035383088814),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8053025059781079828),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 259780035383088814),
            name: 'email',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 6245571220294397350),
      name: 'TilesDataModel',
      lastPropertyId: const obx_int.IdUid(6, 6037053040490097851),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 2127719892633509512),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6455320782952087374),
            name: 'dateTimeInUTC',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3494926802482027229),
            name: 'unsubscribed',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 7777922488775041449),
            name: 'skipped',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6542498946428951805),
            name: 'deleted',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6037053040490097851),
            name: 'available',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 811357324085441868),
      name: 'UnsubscribedEmailHisotryModel',
      lastPropertyId: const obx_int.IdUid(3, 8268923903139695531),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5270235661588326579),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2466669024512340497),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8268923903139695531),
            name: 'count',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(8, 211056766577625818),
      name: 'UserCredentialModel',
      lastPropertyId: const obx_int.IdUid(4, 4280944088520950471),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7642269262822814016),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 8300201011423405907),
            name: 'userEmail',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8557889796750498458),
            name: 'accessToken',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4280944088520950471),
            name: 'idToken',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 1577877245761945264),
      name: 'OauthModel',
      lastPropertyId: const obx_int.IdUid(3, 6066796464944196888),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 162056968862778392),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4654031800970569248),
            name: 'useDefaultKey',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6066796464944196888),
            name: 'oAuthKey',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(9, 1577877245761945264),
      lastIndexId: const obx_int.IdUid(0, 0),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AppSettingsModel: obx_int.EntityDefinition<AppSettingsModel>(
        model: _entities[0],
        toOneRelations: (AppSettingsModel object) => [],
        toManyRelations: (AppSettingsModel object) => {},
        getId: (AppSettingsModel object) => object.id,
        setId: (AppSettingsModel object, int id) {
          object.id = id;
        },
        objectToFB: (AppSettingsModel object, fb.Builder fbb) {
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.permanentDelete);
          fbb.addBool(2, object.blockTheSender);
          fbb.addBool(3, object.deleteAllMailsFromTheSender);
          fbb.addBool(4, object.showSkippedEmails);
          fbb.addBool(5, object.showOnlyUnsubscribableEmails);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final permanentDeleteParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final blockTheSenderParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 8, false);
          final deleteAllMailsFromTheSenderParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false);
          final showSkippedEmailsParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final showOnlyUnsubscribableEmailsParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false);
          final object = AppSettingsModel(
              id: idParam,
              permanentDelete: permanentDeleteParam,
              blockTheSender: blockTheSenderParam,
              deleteAllMailsFromTheSender: deleteAllMailsFromTheSenderParam,
              showSkippedEmails: showSkippedEmailsParam,
              showOnlyUnsubscribableEmails: showOnlyUnsubscribableEmailsParam);

          return object;
        }),
    CheckedEmailsModel: obx_int.EntityDefinition<CheckedEmailsModel>(
        model: _entities[1],
        toOneRelations: (CheckedEmailsModel object) => [],
        toManyRelations: (CheckedEmailsModel object) => {},
        getId: (CheckedEmailsModel object) => object.id,
        setId: (CheckedEmailsModel object, int id) {
          object.id = id;
        },
        objectToFB: (CheckedEmailsModel object, fb.Builder fbb) {
          final emailIdsOffset = fbb.writeString(object.emailIds);
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, emailIdsOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final emailIdsParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final object =
              CheckedEmailsModel(id: idParam, emailIds: emailIdsParam);

          return object;
        }),
    ComponentsCacheModel: obx_int.EntityDefinition<ComponentsCacheModel>(
        model: _entities[2],
        toOneRelations: (ComponentsCacheModel object) => [],
        toManyRelations: (ComponentsCacheModel object) => {},
        getId: (ComponentsCacheModel object) => object.id,
        setId: (ComponentsCacheModel object, int id) {
          object.id = id;
        },
        objectToFB: (ComponentsCacheModel object, fb.Builder fbb) {
          fbb.startTable(3);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.introductionScreen);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final introductionScreenParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final object = ComponentsCacheModel(
              id: idParam, introductionScreen: introductionScreenParam);

          return object;
        }),
    PlaystoreRatingModel: obx_int.EntityDefinition<PlaystoreRatingModel>(
        model: _entities[3],
        toOneRelations: (PlaystoreRatingModel object) => [],
        toManyRelations: (PlaystoreRatingModel object) => {},
        getId: (PlaystoreRatingModel object) => object.id,
        setId: (PlaystoreRatingModel object, int id) {
          object.id = id;
        },
        objectToFB: (PlaystoreRatingModel object, fb.Builder fbb) {
          final dateIfNotOffset = fbb.writeString(object.dateIfNot);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.neverShowAgain);
          fbb.addInt64(2, object.showAtCount);
          fbb.addOffset(3, dateIfNotOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final neverShowAgainParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final showAtCountParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final dateIfNotParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = PlaystoreRatingModel(
              id: idParam,
              neverShowAgain: neverShowAgainParam,
              showAtCount: showAtCountParam,
              dateIfNot: dateIfNotParam);

          return object;
        }),
    SkippedEmailsHistoryModel:
        obx_int.EntityDefinition<SkippedEmailsHistoryModel>(
            model: _entities[4],
            toOneRelations: (SkippedEmailsHistoryModel object) => [],
            toManyRelations: (SkippedEmailsHistoryModel object) => {},
            getId: (SkippedEmailsHistoryModel object) => object.id,
            setId: (SkippedEmailsHistoryModel object, int id) {
              object.id = id;
            },
            objectToFB: (SkippedEmailsHistoryModel object, fb.Builder fbb) {
              final emailOffset = fbb.writeString(object.email);
              fbb.startTable(3);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, emailOffset);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final emailParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final object =
                  SkippedEmailsHistoryModel(id: idParam, email: emailParam);

              return object;
            }),
    TilesDataModel: obx_int.EntityDefinition<TilesDataModel>(
        model: _entities[5],
        toOneRelations: (TilesDataModel object) => [],
        toManyRelations: (TilesDataModel object) => {},
        getId: (TilesDataModel object) => object.id,
        setId: (TilesDataModel object, int id) {
          object.id = id;
        },
        objectToFB: (TilesDataModel object, fb.Builder fbb) {
          final dateTimeInUTCOffset = fbb.writeString(object.dateTimeInUTC);
          fbb.startTable(7);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, dateTimeInUTCOffset);
          fbb.addInt64(2, object.unsubscribed);
          fbb.addInt64(3, object.skipped);
          fbb.addInt64(4, object.deleted);
          fbb.addInt64(5, object.available);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final dateTimeInUTCParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
          final unsubscribedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final deletedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final skippedParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final availableParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final object = TilesDataModel(
              id: idParam,
              dateTimeInUTC: dateTimeInUTCParam,
              unsubscribed: unsubscribedParam,
              deleted: deletedParam,
              skipped: skippedParam,
              available: availableParam);

          return object;
        }),
    UnsubscribedEmailHisotryModel:
        obx_int.EntityDefinition<UnsubscribedEmailHisotryModel>(
            model: _entities[6],
            toOneRelations: (UnsubscribedEmailHisotryModel object) => [],
            toManyRelations: (UnsubscribedEmailHisotryModel object) => {},
            getId: (UnsubscribedEmailHisotryModel object) => object.id,
            setId: (UnsubscribedEmailHisotryModel object, int id) {
              object.id = id;
            },
            objectToFB: (UnsubscribedEmailHisotryModel object, fb.Builder fbb) {
              final emailOffset = fbb.writeString(object.email);
              fbb.startTable(4);
              fbb.addInt64(0, object.id);
              fbb.addOffset(1, emailOffset);
              fbb.addInt64(2, object.count);
              fbb.finish(fbb.endTable());
              return object.id;
            },
            objectFromFB: (obx.Store store, ByteData fbData) {
              final buffer = fb.BufferContext(fbData);
              final rootOffset = buffer.derefObject(0);
              final idParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
              final emailParam = const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, '');
              final countParam =
                  const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
              final object = UnsubscribedEmailHisotryModel(
                  id: idParam, email: emailParam, count: countParam);

              return object;
            }),
    UserCredentialModel: obx_int.EntityDefinition<UserCredentialModel>(
        model: _entities[7],
        toOneRelations: (UserCredentialModel object) => [],
        toManyRelations: (UserCredentialModel object) => {},
        getId: (UserCredentialModel object) => object.id,
        setId: (UserCredentialModel object, int id) {
          object.id = id;
        },
        objectToFB: (UserCredentialModel object, fb.Builder fbb) {
          final userEmailOffset = fbb.writeString(object.userEmail);
          final accessTokenOffset = fbb.writeString(object.accessToken);
          final idTokenOffset = fbb.writeString(object.idToken);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, userEmailOffset);
          fbb.addOffset(2, accessTokenOffset);
          fbb.addOffset(3, idTokenOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final userEmailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final accessTokenParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final idTokenParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final object = UserCredentialModel(
              id: idParam,
              userEmail: userEmailParam,
              accessToken: accessTokenParam,
              idToken: idTokenParam);

          return object;
        }),
    OauthModel: obx_int.EntityDefinition<OauthModel>(
        model: _entities[8],
        toOneRelations: (OauthModel object) => [],
        toManyRelations: (OauthModel object) => {},
        getId: (OauthModel object) => object.id,
        setId: (OauthModel object, int id) {
          object.id = id;
        },
        objectToFB: (OauthModel object, fb.Builder fbb) {
          final oAuthKeyOffset = fbb.writeString(object.oAuthKey);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.useDefaultKey);
          fbb.addOffset(2, oAuthKeyOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final useDefaultKeyParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final oAuthKeyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final object = OauthModel(
              id: idParam,
              useDefaultKey: useDefaultKeyParam,
              oAuthKey: oAuthKeyParam);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AppSettingsModel] entity fields to define ObjectBox queries.
class AppSettingsModel_ {
  /// See [AppSettingsModel.id].
  static final id =
      obx.QueryIntegerProperty<AppSettingsModel>(_entities[0].properties[0]);

  /// See [AppSettingsModel.permanentDelete].
  static final permanentDelete =
      obx.QueryBooleanProperty<AppSettingsModel>(_entities[0].properties[1]);

  /// See [AppSettingsModel.blockTheSender].
  static final blockTheSender =
      obx.QueryBooleanProperty<AppSettingsModel>(_entities[0].properties[2]);

  /// See [AppSettingsModel.deleteAllMailsFromTheSender].
  static final deleteAllMailsFromTheSender =
      obx.QueryBooleanProperty<AppSettingsModel>(_entities[0].properties[3]);

  /// See [AppSettingsModel.showSkippedEmails].
  static final showSkippedEmails =
      obx.QueryBooleanProperty<AppSettingsModel>(_entities[0].properties[4]);

  /// See [AppSettingsModel.showOnlyUnsubscribableEmails].
  static final showOnlyUnsubscribableEmails =
      obx.QueryBooleanProperty<AppSettingsModel>(_entities[0].properties[5]);
}

/// [CheckedEmailsModel] entity fields to define ObjectBox queries.
class CheckedEmailsModel_ {
  /// See [CheckedEmailsModel.id].
  static final id =
      obx.QueryIntegerProperty<CheckedEmailsModel>(_entities[1].properties[0]);

  /// See [CheckedEmailsModel.emailIds].
  static final emailIds =
      obx.QueryStringProperty<CheckedEmailsModel>(_entities[1].properties[1]);
}

/// [ComponentsCacheModel] entity fields to define ObjectBox queries.
class ComponentsCacheModel_ {
  /// See [ComponentsCacheModel.id].
  static final id = obx.QueryIntegerProperty<ComponentsCacheModel>(
      _entities[2].properties[0]);

  /// See [ComponentsCacheModel.introductionScreen].
  static final introductionScreen =
      obx.QueryBooleanProperty<ComponentsCacheModel>(
          _entities[2].properties[1]);
}

/// [PlaystoreRatingModel] entity fields to define ObjectBox queries.
class PlaystoreRatingModel_ {
  /// See [PlaystoreRatingModel.id].
  static final id = obx.QueryIntegerProperty<PlaystoreRatingModel>(
      _entities[3].properties[0]);

  /// See [PlaystoreRatingModel.neverShowAgain].
  static final neverShowAgain = obx.QueryBooleanProperty<PlaystoreRatingModel>(
      _entities[3].properties[1]);

  /// See [PlaystoreRatingModel.showAtCount].
  static final showAtCount = obx.QueryIntegerProperty<PlaystoreRatingModel>(
      _entities[3].properties[2]);

  /// See [PlaystoreRatingModel.dateIfNot].
  static final dateIfNot =
      obx.QueryStringProperty<PlaystoreRatingModel>(_entities[3].properties[3]);
}

/// [SkippedEmailsHistoryModel] entity fields to define ObjectBox queries.
class SkippedEmailsHistoryModel_ {
  /// See [SkippedEmailsHistoryModel.id].
  static final id = obx.QueryIntegerProperty<SkippedEmailsHistoryModel>(
      _entities[4].properties[0]);

  /// See [SkippedEmailsHistoryModel.email].
  static final email = obx.QueryStringProperty<SkippedEmailsHistoryModel>(
      _entities[4].properties[1]);
}

/// [TilesDataModel] entity fields to define ObjectBox queries.
class TilesDataModel_ {
  /// See [TilesDataModel.id].
  static final id =
      obx.QueryIntegerProperty<TilesDataModel>(_entities[5].properties[0]);

  /// See [TilesDataModel.dateTimeInUTC].
  static final dateTimeInUTC =
      obx.QueryStringProperty<TilesDataModel>(_entities[5].properties[1]);

  /// See [TilesDataModel.unsubscribed].
  static final unsubscribed =
      obx.QueryIntegerProperty<TilesDataModel>(_entities[5].properties[2]);

  /// See [TilesDataModel.skipped].
  static final skipped =
      obx.QueryIntegerProperty<TilesDataModel>(_entities[5].properties[3]);

  /// See [TilesDataModel.deleted].
  static final deleted =
      obx.QueryIntegerProperty<TilesDataModel>(_entities[5].properties[4]);

  /// See [TilesDataModel.available].
  static final available =
      obx.QueryIntegerProperty<TilesDataModel>(_entities[5].properties[5]);
}

/// [UnsubscribedEmailHisotryModel] entity fields to define ObjectBox queries.
class UnsubscribedEmailHisotryModel_ {
  /// See [UnsubscribedEmailHisotryModel.id].
  static final id = obx.QueryIntegerProperty<UnsubscribedEmailHisotryModel>(
      _entities[6].properties[0]);

  /// See [UnsubscribedEmailHisotryModel.email].
  static final email = obx.QueryStringProperty<UnsubscribedEmailHisotryModel>(
      _entities[6].properties[1]);

  /// See [UnsubscribedEmailHisotryModel.count].
  static final count = obx.QueryIntegerProperty<UnsubscribedEmailHisotryModel>(
      _entities[6].properties[2]);
}

/// [UserCredentialModel] entity fields to define ObjectBox queries.
class UserCredentialModel_ {
  /// See [UserCredentialModel.id].
  static final id =
      obx.QueryIntegerProperty<UserCredentialModel>(_entities[7].properties[0]);

  /// See [UserCredentialModel.userEmail].
  static final userEmail =
      obx.QueryStringProperty<UserCredentialModel>(_entities[7].properties[1]);

  /// See [UserCredentialModel.accessToken].
  static final accessToken =
      obx.QueryStringProperty<UserCredentialModel>(_entities[7].properties[2]);

  /// See [UserCredentialModel.idToken].
  static final idToken =
      obx.QueryStringProperty<UserCredentialModel>(_entities[7].properties[3]);
}

/// [OauthModel] entity fields to define ObjectBox queries.
class OauthModel_ {
  /// See [OauthModel.id].
  static final id =
      obx.QueryIntegerProperty<OauthModel>(_entities[8].properties[0]);

  /// See [OauthModel.useDefaultKey].
  static final useDefaultKey =
      obx.QueryBooleanProperty<OauthModel>(_entities[8].properties[1]);

  /// See [OauthModel.oAuthKey].
  static final oAuthKey =
      obx.QueryStringProperty<OauthModel>(_entities[8].properties[2]);
}
